// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package swift_proto_testing.generated;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  adjusted = 1;
  aggregateValue = 2;
  allCases = 3;
  allowAlias = 4;
  alwaysPrintEnumsAsInts = 5;
  alwaysPrintInt64sAsNumbers = 6;
  annotation = 7;
  any = 8;
  AnyExtensionField = 9;
  AnyMessageExtension = 10;
  AnyMessageStorage = 11;
  AnyUnpackError = 12;
  Api = 13;
  appended = 14;
  appendUIntHex = 15;
  appendUnknown = 16;
  areAllInitialized = 17;
  Array = 18;
  arrayDepth = 19;
  arrayLiteral = 20;
  arraySeparator = 21;
  as = 22;
  asciiOpenCurlyBracket = 23;
  asciiZero = 24;
  async = 25;
  AsyncIterator = 26;
  AsyncIteratorProtocol = 27;
  AsyncMessageSequence = 28;
  available = 29;
  b = 30;
  Base = 31;
  base64Values = 32;
  baseAddress = 33;
  BaseType = 34;
  begin = 35;
  binary = 36;
  BinaryDecoder = 37;
  BinaryDecodingError = 38;
  BinaryDecodingOptions = 39;
  BinaryDelimited = 40;
  BinaryEncoder = 41;
  BinaryEncodingError = 42;
  BinaryEncodingMessageSetSizeVisitor = 43;
  BinaryEncodingMessageSetVisitor = 44;
  BinaryEncodingOptions = 45;
  BinaryEncodingSizeVisitor = 46;
  BinaryEncodingVisitor = 47;
  binaryOptions = 48;
  binaryProtobufDelimitedMessages = 49;
  bitPattern = 50;
  body = 51;
  Bool = 52;
  booleanLiteral = 53;
  BooleanLiteralType = 54;
  boolValue = 55;
  buffer = 56;
  bytes = 57;
  bytesInGroup = 58;
  bytesNeeded = 59;
  bytesRead = 60;
  BytesValue = 61;
  c = 62;
  capitalizeNext = 63;
  cardinality = 64;
  CaseIterable = 65;
  ccEnableArenas = 66;
  ccGenericServices = 67;
  Character = 68;
  chars = 69;
  chunk = 70;
  class = 71;
  clearAggregateValue = 72;
  clearAllowAlias = 73;
  clearBegin = 74;
  clearCcEnableArenas = 75;
  clearCcGenericServices = 76;
  clearClientStreaming = 77;
  clearCsharpNamespace = 78;
  clearCtype = 79;
  clearDebugRedact = 80;
  clearDefaultValue = 81;
  clearDeprecated = 82;
  clearDeprecatedLegacyJsonFieldConflicts = 83;
  clearDoubleValue = 84;
  clearEdition = 85;
  clearEditionEnum = 86;
  clearEnd = 87;
  clearEnumType = 88;
  clearExtendee = 89;
  clearExtensionValue = 90;
  clearFeatures = 91;
  clearFieldPresence = 92;
  clearFullName = 93;
  clearGoPackage = 94;
  clearIdempotencyLevel = 95;
  clearIdentifierValue = 96;
  clearInputType = 97;
  clearIsExtension = 98;
  clearJavaGenerateEqualsAndHash = 99;
  clearJavaGenericServices = 100;
  clearJavaMultipleFiles = 101;
  clearJavaOuterClassname = 102;
  clearJavaPackage = 103;
  clearJavaStringCheckUtf8 = 104;
  clearJsonFormat = 105;
  clearJsonName = 106;
  clearJstype = 107;
  clearLabel = 108;
  clearLazy = 109;
  clearLeadingComments = 110;
  clearMapEntry = 111;
  clearMaximumEdition = 112;
  clearMaximumEditionEnum = 113;
  clearMessageEncoding = 114;
  clearMessageSetWireFormat = 115;
  clearMinimumEdition = 116;
  clearMinimumEditionEnum = 117;
  clearName = 118;
  clearNamePart = 119;
  clearNegativeIntValue = 120;
  clearNoStandardDescriptorAccessor = 121;
  clearNumber = 122;
  clearObjcClassPrefix = 123;
  clearOneofIndex = 124;
  clearOptimizeFor = 125;
  clearOptions = 126;
  clearOutputType = 127;
  clearPackage = 128;
  clearPacked = 129;
  clearPhpClassPrefix = 130;
  clearPhpGenericServices = 131;
  clearPhpMetadataNamespace = 132;
  clearPhpNamespace = 133;
  clearPositiveIntValue = 134;
  clearProto3Optional = 135;
  clearPyGenericServices = 136;
  clearRepeated = 137;
  clearRepeatedFieldEncoding = 138;
  clearReserved = 139;
  clearRetention = 140;
  clearRubyPackage = 141;
  clearSemantic = 142;
  clearServerStreaming = 143;
  clearSourceCodeInfo = 144;
  clearSourceContext = 145;
  clearSourceFile = 146;
  clearStart = 147;
  clearStringValue = 148;
  clearSwiftPrefix = 149;
  clearSyntax = 150;
  clearTrailingComments = 151;
  clearType = 152;
  clearTypeName = 153;
  clearUnverifiedLazy = 154;
  clearValue = 155;
  clearVerification = 156;
  clearWeak = 157;
  clientStreaming = 158;
  codePoint = 159;
  codeUnits = 160;
  Collection = 161;
  com = 162;
  comma = 163;
  CommonMessageConformances = 164;
  consumedBytes = 165;
  contentsOf = 166;
  count = 167;
  countVarintsInBuffer = 168;
  csharpNamespace = 169;
  ctype = 170;
  customCodable = 171;
  d = 172;
  Data = 173;
  dataResult = 174;
  date = 175;
  daySec = 176;
  daysSinceEpoch = 177;
  debugDescription = 178;
  debugRedact = 179;
  declaration = 180;
  decoded = 181;
  decodedFromJSONNull = 182;
  decodeExtensionField = 183;
  decodeExtensionFieldsAsMessageSet = 184;
  decodeJSON = 185;
  decodeMapField = 186;
  decodeMessage = 187;
  decoder = 188;
  decodeRepeated = 189;
  decodeRepeatedBoolField = 190;
  decodeRepeatedBytesField = 191;
  decodeRepeatedDoubleField = 192;
  decodeRepeatedEnumField = 193;
  decodeRepeatedFixed32Field = 194;
  decodeRepeatedFixed64Field = 195;
  decodeRepeatedFloatField = 196;
  decodeRepeatedGroupField = 197;
  decodeRepeatedInt32Field = 198;
  decodeRepeatedInt64Field = 199;
  decodeRepeatedMessageField = 200;
  decodeRepeatedSFixed32Field = 201;
  decodeRepeatedSFixed64Field = 202;
  decodeRepeatedSInt32Field = 203;
  decodeRepeatedSInt64Field = 204;
  decodeRepeatedStringField = 205;
  decodeRepeatedUInt32Field = 206;
  decodeRepeatedUInt64Field = 207;
  decodeSingular = 208;
  decodeSingularBoolField = 209;
  decodeSingularBytesField = 210;
  decodeSingularDoubleField = 211;
  decodeSingularEnumField = 212;
  decodeSingularFixed32Field = 213;
  decodeSingularFixed64Field = 214;
  decodeSingularFloatField = 215;
  decodeSingularGroupField = 216;
  decodeSingularInt32Field = 217;
  decodeSingularInt64Field = 218;
  decodeSingularMessageField = 219;
  decodeSingularSFixed32Field = 220;
  decodeSingularSFixed64Field = 221;
  decodeSingularSInt32Field = 222;
  decodeSingularSInt64Field = 223;
  decodeSingularStringField = 224;
  decodeSingularUInt32Field = 225;
  decodeSingularUInt64Field = 226;
  decodeTextFormat = 227;
  defaultAnyTypeURLPrefix = 228;
  defaults = 229;
  defaultValue = 230;
  dependency = 231;
  deprecated = 232;
  deprecatedLegacyJsonFieldConflicts = 233;
  description = 234;
  DescriptorProto = 235;
  Dictionary = 236;
  dictionaryLiteral = 237;
  digit = 238;
  digit0 = 239;
  digit1 = 240;
  digitCount = 241;
  digits = 242;
  digitValue = 243;
  discardableResult = 244;
  discardUnknownFields = 245;
  Double = 246;
  doubleValue = 247;
  Duration = 248;
  E = 249;
  edition = 250;
  EditionDefault = 251;
  editionDefaults = 252;
  editionEnum = 253;
  Element = 254;
  elements = 255;
  emitExtensionFieldName = 256;
  emitFieldName = 257;
  emitFieldNumber = 258;
  Empty = 259;
  encodeAsBytes = 260;
  encoded = 261;
  encodedJSONString = 262;
  encodedSize = 263;
  encodeField = 264;
  encoder = 265;
  end = 266;
  endArray = 267;
  endMessageField = 268;
  endObject = 269;
  endRegularField = 270;
  enum = 271;
  EnumDescriptorProto = 272;
  EnumOptions = 273;
  EnumReservedRange = 274;
  enumType = 275;
  enumvalue = 276;
  EnumValueDescriptorProto = 277;
  EnumValueOptions = 278;
  Equatable = 279;
  Error = 280;
  escaping = 281;
  ExpressibleByArrayLiteral = 282;
  ExpressibleByDictionaryLiteral = 283;
  ext = 284;
  extDecoder = 285;
  extendedGraphemeClusterLiteral = 286;
  ExtendedGraphemeClusterLiteralType = 287;
  extendee = 288;
  ExtensibleMessage = 289;
  extension = 290;
  ExtensionField = 291;
  extensionFieldNumber = 292;
  extensionFields = 293;
  extensionFieldsAsMessageSet = 294;
  ExtensionFieldValueSet = 295;
  ExtensionMap = 296;
  extensionRange = 297;
  ExtensionRangeOptions = 298;
  extensions = 299;
  extras = 300;
  F = 301;
  false = 302;
  features = 303;
  FeatureSet = 304;
  FeatureSetDefaults = 305;
  FeatureSetEditionDefault = 306;
  field = 307;
  fieldData = 308;
  FieldDescriptorProto = 309;
  FieldMask = 310;
  fieldName = 311;
  fieldNameCount = 312;
  fieldNum = 313;
  fieldNumber = 314;
  fieldNumberForProto = 315;
  FieldOptions = 316;
  fieldPresence = 317;
  fields = 318;
  fieldSize = 319;
  FieldTag = 320;
  fieldType = 321;
  file = 322;
  FileDescriptorProto = 323;
  FileDescriptorSet = 324;
  fileName = 325;
  FileOptions = 326;
  filter = 327;
  final = 328;
  first = 329;
  firstItem = 330;
  Float = 331;
  floatLiteral = 332;
  FloatLiteralType = 333;
  FloatValue = 334;
  forMessageName = 335;
  formUnion = 336;
  forReadingFrom = 337;
  forTypeURL = 338;
  ForwardParser = 339;
  forWritingInto = 340;
  from = 341;
  fromAscii2 = 342;
  fromAscii4 = 343;
  fromByteOffset = 344;
  fromHexDigit = 345;
  fullName = 346;
  func = 347;
  G = 348;
  GeneratedCodeInfo = 349;
  get = 350;
  getExtensionValue = 351;
  getValue = 352;
  googleapis = 353;
  Google_Protobuf_Any = 354;
  Google_Protobuf_Api = 355;
  Google_Protobuf_BoolValue = 356;
  Google_Protobuf_BytesValue = 357;
  Google_Protobuf_DescriptorProto = 358;
  Google_Protobuf_DoubleValue = 359;
  Google_Protobuf_Duration = 360;
  Google_Protobuf_Edition = 361;
  Google_Protobuf_Empty = 362;
  Google_Protobuf_Enum = 363;
  Google_Protobuf_EnumDescriptorProto = 364;
  Google_Protobuf_EnumOptions = 365;
  Google_Protobuf_EnumValue = 366;
  Google_Protobuf_EnumValueDescriptorProto = 367;
  Google_Protobuf_EnumValueOptions = 368;
  Google_Protobuf_ExtensionRangeOptions = 369;
  Google_Protobuf_FeatureSet = 370;
  Google_Protobuf_FeatureSetDefaults = 371;
  Google_Protobuf_Field = 372;
  Google_Protobuf_FieldDescriptorProto = 373;
  Google_Protobuf_FieldMask = 374;
  Google_Protobuf_FieldOptions = 375;
  Google_Protobuf_FileDescriptorProto = 376;
  Google_Protobuf_FileDescriptorSet = 377;
  Google_Protobuf_FileOptions = 378;
  Google_Protobuf_FloatValue = 379;
  Google_Protobuf_GeneratedCodeInfo = 380;
  Google_Protobuf_Int32Value = 381;
  Google_Protobuf_Int64Value = 382;
  Google_Protobuf_ListValue = 383;
  Google_Protobuf_MessageOptions = 384;
  Google_Protobuf_Method = 385;
  Google_Protobuf_MethodDescriptorProto = 386;
  Google_Protobuf_MethodOptions = 387;
  Google_Protobuf_Mixin = 388;
  Google_Protobuf_NullValue = 389;
  Google_Protobuf_OneofDescriptorProto = 390;
  Google_Protobuf_OneofOptions = 391;
  Google_Protobuf_Option = 392;
  Google_Protobuf_ServiceDescriptorProto = 393;
  Google_Protobuf_ServiceOptions = 394;
  Google_Protobuf_SourceCodeInfo = 395;
  Google_Protobuf_SourceContext = 396;
  Google_Protobuf_StringValue = 397;
  Google_Protobuf_Struct = 398;
  Google_Protobuf_Syntax = 399;
  Google_Protobuf_Timestamp = 400;
  Google_Protobuf_Type = 401;
  Google_Protobuf_UInt32Value = 402;
  Google_Protobuf_UInt64Value = 403;
  Google_Protobuf_UninterpretedOption = 404;
  Google_Protobuf_Value = 405;
  goPackage = 406;
  group = 407;
  groupFieldNumberStack = 408;
  groupSize = 409;
  hadOneofValue = 410;
  handleConflictingOneOf = 411;
  hasAggregateValue = 412;
  hasAllowAlias = 413;
  hasBegin = 414;
  hasCcEnableArenas = 415;
  hasCcGenericServices = 416;
  hasClientStreaming = 417;
  hasCsharpNamespace = 418;
  hasCtype = 419;
  hasDebugRedact = 420;
  hasDefaultValue = 421;
  hasDeprecated = 422;
  hasDeprecatedLegacyJsonFieldConflicts = 423;
  hasDoubleValue = 424;
  hasEdition = 425;
  hasEditionEnum = 426;
  hasEnd = 427;
  hasEnumType = 428;
  hasExtendee = 429;
  hasExtensionValue = 430;
  hasFeatures = 431;
  hasFieldPresence = 432;
  hasFullName = 433;
  hasGoPackage = 434;
  hash = 435;
  Hashable = 436;
  hasher = 437;
  HashVisitor = 438;
  hasIdempotencyLevel = 439;
  hasIdentifierValue = 440;
  hasInputType = 441;
  hasIsExtension = 442;
  hasJavaGenerateEqualsAndHash = 443;
  hasJavaGenericServices = 444;
  hasJavaMultipleFiles = 445;
  hasJavaOuterClassname = 446;
  hasJavaPackage = 447;
  hasJavaStringCheckUtf8 = 448;
  hasJsonFormat = 449;
  hasJsonName = 450;
  hasJstype = 451;
  hasLabel = 452;
  hasLazy = 453;
  hasLeadingComments = 454;
  hasMapEntry = 455;
  hasMaximumEdition = 456;
  hasMaximumEditionEnum = 457;
  hasMessageEncoding = 458;
  hasMessageSetWireFormat = 459;
  hasMinimumEdition = 460;
  hasMinimumEditionEnum = 461;
  hasName = 462;
  hasNamePart = 463;
  hasNegativeIntValue = 464;
  hasNoStandardDescriptorAccessor = 465;
  hasNumber = 466;
  hasObjcClassPrefix = 467;
  hasOneofIndex = 468;
  hasOptimizeFor = 469;
  hasOptions = 470;
  hasOutputType = 471;
  hasPackage = 472;
  hasPacked = 473;
  hasPhpClassPrefix = 474;
  hasPhpGenericServices = 475;
  hasPhpMetadataNamespace = 476;
  hasPhpNamespace = 477;
  hasPositiveIntValue = 478;
  hasProto3Optional = 479;
  hasPyGenericServices = 480;
  hasRepeated = 481;
  hasRepeatedFieldEncoding = 482;
  hasReserved = 483;
  hasRetention = 484;
  hasRubyPackage = 485;
  hasSemantic = 486;
  hasServerStreaming = 487;
  hasSourceCodeInfo = 488;
  hasSourceContext = 489;
  hasSourceFile = 490;
  hasStart = 491;
  hasStringValue = 492;
  hasSwiftPrefix = 493;
  hasSyntax = 494;
  hasTrailingComments = 495;
  hasType = 496;
  hasTypeName = 497;
  hasUnverifiedLazy = 498;
  hasValue = 499;
  hasVerification = 500;
  hasWeak = 501;
  hour = 502;
  i = 503;
  idempotencyLevel = 504;
  identifierValue = 505;
  if = 506;
  ignoreUnknownFields = 507;
  index = 508;
  init = 509;
  inout = 510;
  inputType = 511;
  insert = 512;
  Int = 513;
  Int32 = 514;
  Int32Value = 515;
  Int64 = 516;
  Int64Value = 517;
  Int8 = 518;
  integerLiteral = 519;
  IntegerLiteralType = 520;
  intern = 521;
  Internal = 522;
  InternalState = 523;
  into = 524;
  ints = 525;
  isA = 526;
  isEqual = 527;
  isEqualTo = 528;
  isExtension = 529;
  isInitialized = 530;
  isNegative = 531;
  isUnset = 532;
  itemTagsEncodedSize = 533;
  iterator = 534;
  javaGenerateEqualsAndHash = 535;
  javaGenericServices = 536;
  javaMultipleFiles = 537;
  javaOuterClassname = 538;
  javaPackage = 539;
  javaStringCheckUtf8 = 540;
  JSONDecoder = 541;
  JSONDecodingError = 542;
  JSONDecodingOptions = 543;
  jsonEncoder = 544;
  JSONEncodingError = 545;
  JSONEncodingOptions = 546;
  JSONEncodingVisitor = 547;
  jsonFormat = 548;
  JSONMapEncodingVisitor = 549;
  jsonName = 550;
  jsonPath = 551;
  jsonPaths = 552;
  JSONScanner = 553;
  jsonString = 554;
  jsonText = 555;
  jsonUTF8Bytes = 556;
  jsonUTF8Data = 557;
  jstype = 558;
  k = 559;
  kChunkSize = 560;
  Key = 561;
  keyField = 562;
  keyFieldOpt = 563;
  KeyType = 564;
  kind = 565;
  l = 566;
  label = 567;
  lazy = 568;
  leadingComments = 569;
  leadingDetachedComments = 570;
  length = 571;
  lessThan = 572;
  let = 573;
  lhs = 574;
  list = 575;
  listOfMessages = 576;
  listValue = 577;
  littleEndian = 578;
  littleEndianBytes = 579;
  load = 580;
  localHasher = 581;
  location = 582;
  M = 583;
  major = 584;
  makeAsyncIterator = 585;
  makeIterator = 586;
  map = 587;
  mapEntry = 588;
  MapKeyType = 589;
  mapToMessages = 590;
  MapValueType = 591;
  mapVisitor = 592;
  maximumEdition = 593;
  maximumEditionEnum = 594;
  mdayStart = 595;
  merge = 596;
  message = 597;
  messageDepthLimit = 598;
  messageEncoding = 599;
  MessageExtension = 600;
  MessageImplementationBase = 601;
  MessageOptions = 602;
  MessageSet = 603;
  messageSetWireFormat = 604;
  messageSize = 605;
  messageType = 606;
  Method = 607;
  MethodDescriptorProto = 608;
  MethodOptions = 609;
  methods = 610;
  min = 611;
  minimumEdition = 612;
  minimumEditionEnum = 613;
  minor = 614;
  Mixin = 615;
  mixins = 616;
  modifier = 617;
  modify = 618;
  month = 619;
  msgExtension = 620;
  mutating = 621;
  n = 622;
  name = 623;
  NameDescription = 624;
  NameMap = 625;
  NamePart = 626;
  names = 627;
  nanos = 628;
  negativeIntValue = 629;
  nestedType = 630;
  newL = 631;
  newList = 632;
  newValue = 633;
  next = 634;
  nextByte = 635;
  nextFieldNumber = 636;
  nextVarInt = 637;
  nil = 638;
  nilLiteral = 639;
  noStandardDescriptorAccessor = 640;
  nullValue = 641;
  number = 642;
  numberValue = 643;
  objcClassPrefix = 644;
  of = 645;
  oneOf = 646;
  oneofDecl = 647;
  OneofDescriptorProto = 648;
  oneofIndex = 649;
  OneofOptions = 650;
  oneofs = 651;
  OneOf_Kind = 652;
  optimizeFor = 653;
  OptimizeMode = 654;
  Option = 655;
  OptionalEnumExtensionField = 656;
  OptionalExtensionField = 657;
  OptionalGroupExtensionField = 658;
  OptionalMessageExtensionField = 659;
  OptionRetention = 660;
  options = 661;
  OptionTargetType = 662;
  other = 663;
  others = 664;
  out = 665;
  outputType = 666;
  p = 667;
  package = 668;
  packed = 669;
  packedBool = 670;
  packedDouble = 671;
  packedEnum = 672;
  PackedEnumExtensionField = 673;
  PackedExtensionField = 674;
  packedFixed32 = 675;
  packedFixed64 = 676;
  packedFloat = 677;
  packedInt32 = 678;
  packedInt64 = 679;
  packedSFixed32 = 680;
  packedSFixed64 = 681;
  packedSInt32 = 682;
  packedSInt64 = 683;
  packedUInt32 = 684;
  packedUInt64 = 685;
  padding = 686;
  parent = 687;
  parse = 688;
  path = 689;
  paths = 690;
  payload = 691;
  payloadSize = 692;
  phpClassPrefix = 693;
  phpGenericServices = 694;
  phpMetadataNamespace = 695;
  phpNamespace = 696;
  pos = 697;
  positiveIntValue = 698;
  prefix = 699;
  preserveProtoFieldNames = 700;
  preTraverse = 701;
  printUnknownFields = 702;
  proto2 = 703;
  proto3DefaultValue = 704;
  proto3Optional = 705;
  ProtobufAPIVersionCheck = 706;
  ProtobufAPIVersion_3 = 707;
  ProtobufBool = 708;
  ProtobufBytes = 709;
  ProtobufDouble = 710;
  ProtobufEnumMap = 711;
  protobufExtension = 712;
  ProtobufFixed32 = 713;
  ProtobufFixed64 = 714;
  ProtobufFloat = 715;
  ProtobufInt32 = 716;
  ProtobufInt64 = 717;
  ProtobufMap = 718;
  ProtobufMessageMap = 719;
  ProtobufSFixed32 = 720;
  ProtobufSFixed64 = 721;
  ProtobufSInt32 = 722;
  ProtobufSInt64 = 723;
  ProtobufString = 724;
  ProtobufUInt32 = 725;
  ProtobufUInt64 = 726;
  protobuf_extensionFieldValues = 727;
  protobuf_fieldNumber = 728;
  protobuf_generated_isEqualTo = 729;
  protobuf_nameMap = 730;
  protobuf_newField = 731;
  protobuf_package = 732;
  protocol = 733;
  protoFieldName = 734;
  protoMessageName = 735;
  ProtoNameProviding = 736;
  protoPaths = 737;
  public = 738;
  publicDependency = 739;
  putBoolValue = 740;
  putBytesValue = 741;
  putDoubleValue = 742;
  putEnumValue = 743;
  putFixedUInt32 = 744;
  putFixedUInt64 = 745;
  putFloatValue = 746;
  putInt64 = 747;
  putStringValue = 748;
  putUInt64 = 749;
  putUInt64Hex = 750;
  putVarInt = 751;
  putZigZagVarInt = 752;
  pyGenericServices = 753;
  R = 754;
  rawChars = 755;
  RawRepresentable = 756;
  RawValue = 757;
  read4HexDigits = 758;
  readBytes = 759;
  register = 760;
  repeated = 761;
  repeatedBool = 762;
  repeatedBytes = 763;
  repeatedDouble = 764;
  repeatedEnum = 765;
  RepeatedEnumExtensionField = 766;
  RepeatedExtensionField = 767;
  repeatedFieldEncoding = 768;
  repeatedFixed32 = 769;
  repeatedFixed64 = 770;
  repeatedFloat = 771;
  repeatedGroup = 772;
  RepeatedGroupExtensionField = 773;
  repeatedInt32 = 774;
  repeatedInt64 = 775;
  repeatedMessage = 776;
  RepeatedMessageExtensionField = 777;
  repeatedSFixed32 = 778;
  repeatedSFixed64 = 779;
  repeatedSInt32 = 780;
  repeatedSInt64 = 781;
  repeatedString = 782;
  repeatedUInt32 = 783;
  repeatedUInt64 = 784;
  repeating = 785;
  requestStreaming = 786;
  requestTypeURL = 787;
  requiredSize = 788;
  responseStreaming = 789;
  responseTypeURL = 790;
  result = 791;
  retention = 792;
  rethrows = 793;
  return = 794;
  ReturnType = 795;
  revision = 796;
  rhs = 797;
  root = 798;
  rubyPackage = 799;
  s = 800;
  sawBackslash = 801;
  sawSection4Characters = 802;
  sawSection5Characters = 803;
  scanner = 804;
  seconds = 805;
  self = 806;
  semantic = 807;
  Sendable = 808;
  separator = 809;
  serialize = 810;
  serializedBytes = 811;
  serializedData = 812;
  serializedSize = 813;
  serverStreaming = 814;
  service = 815;
  ServiceDescriptorProto = 816;
  ServiceOptions = 817;
  set = 818;
  setExtensionValue = 819;
  shift = 820;
  SimpleExtensionMap = 821;
  singularBool = 822;
  singularBytes = 823;
  singularDouble = 824;
  singularEnum = 825;
  singularFixed32 = 826;
  singularFixed64 = 827;
  singularFloat = 828;
  singularGroup = 829;
  singularInt32 = 830;
  singularInt64 = 831;
  singularMessage = 832;
  singularSFixed32 = 833;
  singularSFixed64 = 834;
  singularSInt32 = 835;
  singularSInt64 = 836;
  singularString = 837;
  singularUInt32 = 838;
  singularUInt64 = 839;
  size = 840;
  sizer = 841;
  source = 842;
  sourceCodeInfo = 843;
  sourceContext = 844;
  sourceEncoding = 845;
  sourceFile = 846;
  span = 847;
  split = 848;
  start = 849;
  startArray = 850;
  startArrayObject = 851;
  startField = 852;
  startIndex = 853;
  startMessageField = 854;
  startObject = 855;
  startRegularField = 856;
  state = 857;
  static = 858;
  StaticString = 859;
  storage = 860;
  String = 861;
  stringLiteral = 862;
  StringLiteralType = 863;
  stringResult = 864;
  stringValue = 865;
  struct = 866;
  structValue = 867;
  subDecoder = 868;
  subscript = 869;
  subVisitor = 870;
  Swift = 871;
  swiftPrefix = 872;
  SwiftProtobufContiguousBytes = 873;
  syntax = 874;
  T = 875;
  tag = 876;
  targets = 877;
  terminator = 878;
  testDecoder = 879;
  text = 880;
  textDecoder = 881;
  TextFormatDecoder = 882;
  TextFormatDecodingError = 883;
  TextFormatDecodingOptions = 884;
  TextFormatEncodingOptions = 885;
  TextFormatEncodingVisitor = 886;
  textFormatString = 887;
  throwOrIgnore = 888;
  throws = 889;
  timeInterval = 890;
  timeIntervalSince1970 = 891;
  timeIntervalSinceReferenceDate = 892;
  Timestamp = 893;
  toConcrete = 894;
  total = 895;
  totalArrayDepth = 896;
  totalSize = 897;
  trailingComments = 898;
  traverse = 899;
  true = 900;
  try = 901;
  type = 902;
  typealias = 903;
  TypeEnum = 904;
  typeName = 905;
  typePrefix = 906;
  typeStart = 907;
  typeUnknown = 908;
  typeURL = 909;
  UInt32 = 910;
  UInt32Value = 911;
  UInt64 = 912;
  UInt64Value = 913;
  UInt8 = 914;
  unchecked = 915;
  unicodeScalarLiteral = 916;
  UnicodeScalarLiteralType = 917;
  unicodeScalars = 918;
  UnicodeScalarView = 919;
  uninterpretedOption = 920;
  union = 921;
  uniqueStorage = 922;
  unknown = 923;
  unknownFields = 924;
  UnknownStorage = 925;
  unpackTo = 926;
  UnsafeBufferPointer = 927;
  UnsafeMutablePointer = 928;
  UnsafeMutableRawBufferPointer = 929;
  UnsafeRawBufferPointer = 930;
  UnsafeRawPointer = 931;
  unverifiedLazy = 932;
  updatedOptions = 933;
  url = 934;
  useDeterministicOrdering = 935;
  utf8 = 936;
  utf8Ptr = 937;
  utf8ToDouble = 938;
  UTF8View = 939;
  v = 940;
  value = 941;
  valueField = 942;
  values = 943;
  ValueType = 944;
  var = 945;
  verification = 946;
  VerificationState = 947;
  Version = 948;
  versionString = 949;
  visitExtensionFields = 950;
  visitExtensionFieldsAsMessageSet = 951;
  visitMapField = 952;
  visitor = 953;
  visitPacked = 954;
  visitPackedBoolField = 955;
  visitPackedDoubleField = 956;
  visitPackedEnumField = 957;
  visitPackedFixed32Field = 958;
  visitPackedFixed64Field = 959;
  visitPackedFloatField = 960;
  visitPackedInt32Field = 961;
  visitPackedInt64Field = 962;
  visitPackedSFixed32Field = 963;
  visitPackedSFixed64Field = 964;
  visitPackedSInt32Field = 965;
  visitPackedSInt64Field = 966;
  visitPackedUInt32Field = 967;
  visitPackedUInt64Field = 968;
  visitRepeated = 969;
  visitRepeatedBoolField = 970;
  visitRepeatedBytesField = 971;
  visitRepeatedDoubleField = 972;
  visitRepeatedEnumField = 973;
  visitRepeatedFixed32Field = 974;
  visitRepeatedFixed64Field = 975;
  visitRepeatedFloatField = 976;
  visitRepeatedGroupField = 977;
  visitRepeatedInt32Field = 978;
  visitRepeatedInt64Field = 979;
  visitRepeatedMessageField = 980;
  visitRepeatedSFixed32Field = 981;
  visitRepeatedSFixed64Field = 982;
  visitRepeatedSInt32Field = 983;
  visitRepeatedSInt64Field = 984;
  visitRepeatedStringField = 985;
  visitRepeatedUInt32Field = 986;
  visitRepeatedUInt64Field = 987;
  visitSingular = 988;
  visitSingularBoolField = 989;
  visitSingularBytesField = 990;
  visitSingularDoubleField = 991;
  visitSingularEnumField = 992;
  visitSingularFixed32Field = 993;
  visitSingularFixed64Field = 994;
  visitSingularFloatField = 995;
  visitSingularGroupField = 996;
  visitSingularInt32Field = 997;
  visitSingularInt64Field = 998;
  visitSingularMessageField = 999;
  visitSingularSFixed32Field = 1000;
  visitSingularSFixed64Field = 1001;
  visitSingularSInt32Field = 1002;
  visitSingularSInt64Field = 1003;
  visitSingularStringField = 1004;
  visitSingularUInt32Field = 1005;
  visitSingularUInt64Field = 1006;
  visitUnknown = 1007;
  wasDecoded = 1008;
  weak = 1009;
  weakDependency = 1010;
  where = 1011;
  wireFormat = 1012;
  with = 1013;
  withUnsafeBytes = 1014;
  withUnsafeMutableBytes = 1015;
  work = 1016;
  Wrapped = 1017;
  WrappedType = 1018;
  wrappedValue = 1019;
  written = 1020;
  yday = 1021;
}
